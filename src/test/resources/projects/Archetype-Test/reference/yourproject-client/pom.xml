<?xml version="1.0" encoding="UTF-8"?>
<!--
	The MIT License (MIT)

	Copyright (c) 2015 Mohamed Ilyes Dimassi

	Permission is hereby granted, free of charge, to any person obtaining a
	copy of this software and associated documentation files (the "Software"),
	to deal in the Software without restriction, including without limitation
	the rights to use, copy, modify, merge, publish, distribute, sublicense,
	and/or sell copies of the Software, and to permit persons to whom the Software
	is furnished to do so, subject to the following conditions:

	The above copyright notice and this permission notice shall be included
	in all copies or substantial portions of the Software.

	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
	THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
	FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
	IN THE SOFTWARE.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.yourcompany</groupId>
		<artifactId>yourproject</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>yourproject-client</artifactId>
	<packaging>war</packaging>

	<prerequisites>
		<maven>${mavenVersion}</maven>
	</prerequisites>

	<dependencies>
		<!-- Shared project -->
		<!-- GWT needs BOTH sources and compiled dependencies in order to successfully
			compile the target project -->
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>yourproject-shared</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<scope>provided</scope>
		</dependency>
		<!-- Also use the source package. For this to work properly, the dependency
			itself must provide a source packaging classifier for the module. -->
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>yourproject-shared</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<classifier>sources</classifier>
			<scope>provided</scope>
		</dependency>

		<!-- GWT -->
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>${gwt.version}</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>gwt-compile</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>compile</goal>
						</goals>
						<configuration>
							<!-- For the default build life cycle and before packaging the client
								module, attach the compile goal of the gwt maven plugin to this phase
								and compile the module using all possible permutations in obfuscated
								mode and set the optimizations to the maximum level. The compiler
								will produce the fastest and most optimized version for production
								environment. -->
							<module>com.yourcompany.yourproject.App</module>
							<style>OBF</style>
							<optimizationLevel>9</optimizationLevel>
							<genParam>FALSE</genParam>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<!-- Prevent the war plugin from complaining about a missing web.xml,
						this module is the client side code and we don't need server side related
						files -->
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<!-- The client module is packaged into a war. The server module uses
						the "war overlays" maven feature to merge the client war with the server
						war when building the final release for the application. In order to
						prevent maven from packaging the client side compiled classes and pollute
						the WEB-INF folder of the server, java classes under WEB-INF are excluded
						from the client war and prevented from showing up alongside the server 
						code. -->
					<packagingExcludes>WEB-INF/**</packagingExcludes>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>debugclient</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>gwt-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>gwt-compile</id>
								<configuration>
									<skip>true</skip>
								</configuration>
							</execution>
							<execution>
								<id>gwt-debug</id>
								<phase>process-classes</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<!-- Speed up code generation -->
									<draftCompile>true</draftCompile>
									<!-- Maximize debugging by setting code styling to detailed -->
									<style>DETAILED</style>
									<!-- Minimizing code optimization to keep as much debugging symbols
										as possible. -->
									<optimizationLevel>0</optimizationLevel>
									<!-- Display java method names in native JavaScrit generated code -->
									<methodNameDisplayMode>FULL</methodNameDisplayMode>
									<genParam>TRUE</genParam>
									<!-- Run a single permutation module definition to speed up code
										generation. -->
									<module>com.yourcompany.yourproject.App-dev</module>
									<!-- Do not manage server side code. -->
									<noServer>true</noServer>
									<!-- Set the application landing page for codeserver. -->
									<runTarget>http://localhost:${tomcat.run.port}/</runTarget>
									<workDir>${project.build.directory}</workDir>
								</configuration>
							</execution>
						</executions>
						<!-- Notice how codeserver dependency is made available only for the
							plugin at runtime inside debugclient profile. -->
						<dependencies>
							<dependency>
								<groupId>com.google.gwt</groupId>
								<artifactId>gwt-codeserver</artifactId>
								<version>${gwt.version}</version>
								<scope>runtime</scope>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>debugserver</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>gwt-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>gwt-compile</id>
								<configuration>
									<!-- Setting the skip param prevents GWT compilation when the server
										is launched. -->
									<skip>true</skip>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
